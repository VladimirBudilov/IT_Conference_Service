// <auto-generated />
using System;
using IT_Conference_Service.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IT_Conference_Service.Migrations
{
    [DbContext(typeof(ConferenceDbContext))]
    [Migration("20240328114455_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IT_Conference_Service.Data.Entitiess.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ActivityType")
                        .HasColumnType("int");

                    b.Property<Guid>("AuthorInfoId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsSent")
                        .HasColumnType("bool");

                    b.HasKey("Id");

                    b.HasIndex("AuthorInfoId")
                        .IsUnique();

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("IT_Conference_Service.Data.Entitiess.AuthorInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ActivityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("text");

                    b.Property<string>("Plan")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AuthorInfo");
                });

            modelBuilder.Entity("IT_Conference_Service.Data.Entitiess.Application", b =>
                {
                    b.HasOne("IT_Conference_Service.Data.Entitiess.AuthorInfo", "AuthorInfo")
                        .WithOne("Application")
                        .HasForeignKey("IT_Conference_Service.Data.Entitiess.Application", "AuthorInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuthorInfo");
                });

            modelBuilder.Entity("IT_Conference_Service.Data.Entitiess.AuthorInfo", b =>
                {
                    b.Navigation("Application")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
